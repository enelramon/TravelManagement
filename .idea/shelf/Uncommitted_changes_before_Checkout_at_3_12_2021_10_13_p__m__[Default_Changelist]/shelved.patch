Index: app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.ui.estadoviaje\r\n\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.core.view.isVisible\r\nimport androidx.lifecycle.Observer\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.sagrd.travelmanagement.R\r\nimport com.sagrd.travelmanagement.adapters.ViajeAdapter\r\nimport com.sagrd.travelmanagement.adapters.documentosAdapter\r\nimport com.sagrd.travelmanagement.adapters.gastoAdapter\r\nimport com.sagrd.travelmanagement.databinding.EstadoViajeFragmentBinding\r\nimport com.sagrd.travelmanagement.model.Documentos\r\nimport com.sagrd.travelmanagement.model.Gasto\r\n\r\nclass EstadoViajeFragment : Fragment() {\r\n\r\n    private var _binding : EstadoViajeFragmentBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    companion object {\r\n        fun newInstance() = EstadoViajeFragment()\r\n    }\r\n\r\n    private lateinit var viewModel: EstadoViajeViewModel\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        _binding = EstadoViajeFragmentBinding.inflate(layoutInflater)\r\n        viewModel =\r\n            ViewModelProvider(this, EstadoViajeViewModel.Factory(requireActivity().application))\r\n                .get(EstadoViajeViewModel::class.java)\r\n\r\n        viewModel.listaDocumentoApi.observe(viewLifecycleOwner, Observer{\r\n            val adapter = documentosAdapter()\r\n            adapter.submitList(it)\r\n            binding.estadoViajeRecyclerView.adapter = adapter\r\n        })\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        binding.gastoButton.setOnClickListener{\r\n            findNavController().navigate(R.id.action_estadoViajeFragment_to_gastoViajeFragment)\r\n        }\r\n\r\n        binding.viajeButton.setOnClickListener{\r\n            findNavController().navigate(R.id.viajeEditFragment)\r\n        }\r\n\r\n        var contador = 0\r\n        binding.fabEstadoViajes.setOnClickListener{\r\n            if(contador.mod(2)!=0)\r\n            {\r\n                binding.gastoButton.isVisible = false\r\n                binding.viajeButton.isVisible = false\r\n            }\r\n            else\r\n            {\r\n                binding.gastoButton.isVisible = true\r\n                binding.viajeButton.isVisible = true\r\n            }\r\n            contador++\r\n        }\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeFragment.kt b/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeFragment.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeFragment.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeFragment.kt	(date 1638583741946)
@@ -43,7 +43,6 @@
             adapter.submitList(it)
             binding.estadoViajeRecyclerView.adapter = adapter
         })
-
         return binding.root
     }
 
@@ -53,7 +52,6 @@
         binding.gastoButton.setOnClickListener{
             findNavController().navigate(R.id.action_estadoViajeFragment_to_gastoViajeFragment)
         }
-
         binding.viajeButton.setOnClickListener{
             findNavController().navigate(R.id.viajeEditFragment)
         }
Index: app/src/main/res/layout/balance_viaje_row.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/NombreClienteTextView\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:autoSizeTextType=\"none\"\r\n            android:background=\"#E5E5E5\"\r\n            android:breakStrategy=\"high_quality\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/CostoClienteTextView\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"1.0\"\r\n            tools:text=\"TC ENel\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/CostoClienteTextView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"#E5E5E5\"\r\n            android:gravity=\"right\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/NombreClienteTextView\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:text=\"2,0000\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/balance_viaje_row.xml b/app/src/main/res/layout/balance_viaje_row.xml
--- a/app/src/main/res/layout/balance_viaje_row.xml	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/res/layout/balance_viaje_row.xml	(date 1638583741949)
@@ -2,6 +2,7 @@
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/constraintadacterbalanceviaje"
     android:layout_width="match_parent"
     android:layout_height="wrap_content">
 
Index: app/src/main/java/com/sagrd/travelmanagement/model/Cliente.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.model\r\n\r\nimport androidx.room.Entity\r\nimport androidx.room.PrimaryKey\r\n\r\n@Entity\r\ndata class Cliente(\r\n    @PrimaryKey(autoGenerate = true)\r\n    val clienteId : Long,\r\n    var nombres   : String,\r\n    var balance   : Float\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/model/Cliente.kt b/app/src/main/java/com/sagrd/travelmanagement/model/Cliente.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/model/Cliente.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/model/Cliente.kt	(date 1638583741995)
@@ -4,7 +4,7 @@
 import androidx.room.PrimaryKey
 
 @Entity
-data class Cliente(
+data class Clientes(
     @PrimaryKey(autoGenerate = true)
     val clienteId : Long,
     var nombres   : String,
Index: app/src/main/java/com/sagrd/travelmanagement/adapters/BalanceViajeAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.adapters\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.sagrd.travelmanagement.databinding.BalanceViajeRowBinding\r\nimport com.sagrd.travelmanagement.model.Cliente\r\n\r\n\r\nclass BalanceViajeAdapter(): RecyclerView.Adapter<BalanceViajeAdapter.BalanceViajeViewHolder>() {\r\n        private var traverList = emptyList<Cliente>()\r\n\r\n        override fun onCreateViewHolder(\r\n            parent: ViewGroup,\r\n            viewType: Int\r\n        ): BalanceViajeViewHolder {\r\n            val binding =BalanceViajeRowBinding\r\n                .inflate(LayoutInflater.from(parent.context),parent,false)\r\n\r\n            return BalanceViajeViewHolder(binding)\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: BalanceViajeViewHolder, position: Int) {\r\n            holder.bind(traverList[position])\r\n        }\r\n\r\n        override fun getItemCount(): Int {\r\n            return traverList.size\r\n        }\r\n\r\n        fun sumitList(list: List<Cliente>){\r\n            traverList = list\r\n            notifyDataSetChanged()\r\n        }\r\n\r\n        inner class BalanceViajeViewHolder(private val binding:BalanceViajeRowBinding ) :\r\n            RecyclerView.ViewHolder(binding.root) {\r\n            fun bind(item: Cliente) {\r\n                binding.NombreClienteTextView.text = item.nombres\r\n                binding.CostoClienteTextView.text = item.balance.toString()\r\n            }\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/adapters/BalanceViajeAdapter.kt b/app/src/main/java/com/sagrd/travelmanagement/adapters/BalanceViajeAdapter.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/adapters/BalanceViajeAdapter.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/adapters/BalanceViajeAdapter.kt	(date 1638583741941)
@@ -2,13 +2,16 @@
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
+import androidx.core.os.bundleOf
+import androidx.navigation.findNavController
 import androidx.recyclerview.widget.RecyclerView
+import com.sagrd.travelmanagement.R
 import com.sagrd.travelmanagement.databinding.BalanceViajeRowBinding
-import com.sagrd.travelmanagement.model.Cliente
+import com.sagrd.travelmanagement.model.Clientes
 
 
 class BalanceViajeAdapter(): RecyclerView.Adapter<BalanceViajeAdapter.BalanceViajeViewHolder>() {
-        private var traverList = emptyList<Cliente>()
+        private var traverList = emptyList<Clientes>()
 
         override fun onCreateViewHolder(
             parent: ViewGroup,
@@ -28,14 +31,22 @@
             return traverList.size
         }
 
-        fun sumitList(list: List<Cliente>){
+        fun sumitList(list: List<Clientes>){
             traverList = list
             notifyDataSetChanged()
         }
 
         inner class BalanceViajeViewHolder(private val binding:BalanceViajeRowBinding ) :
             RecyclerView.ViewHolder(binding.root) {
-            fun bind(item: Cliente) {
+            fun bind(item: Clientes) {
+
+
+                binding.constraintadacterbalanceviaje.setOnClickListener(){
+                    val bundle = bundleOf(
+                        "ClienteId" to item.clienteId,
+                    )
+                    binding.root.findNavController().navigate(R.id.estadoViajeFragment,bundle)
+                }
                 binding.NombreClienteTextView.text = item.nombres
                 binding.CostoClienteTextView.text = item.balance.toString()
             }
Index: app/src/main/java/com/sagrd/travelmanagement/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement\r\n\r\nimport android.os.Bundle\r\nimport android.view.Menu\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.sagrd.travelmanagement.databinding.ActivityMainBinding\r\n\r\nclass MainActivity : AppCompatActivity(){\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityMainBinding\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf( R.id.balancesDeViajeFragment\r\n            ), drawerLayout\r\n        )\r\n\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.menu_main, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration)\r\n                || super.onSupportNavigateUp()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/MainActivity.kt b/app/src/main/java/com/sagrd/travelmanagement/MainActivity.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/MainActivity.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/MainActivity.kt	(date 1638583741940)
@@ -2,6 +2,9 @@
 
 import android.os.Bundle
 import android.view.Menu
+import android.view.MenuItem
+import android.view.View
+import android.widget.CheckBox
 import androidx.appcompat.app.AppCompatActivity
 import androidx.drawerlayout.widget.DrawerLayout
 import androidx.navigation.findNavController
@@ -10,21 +13,21 @@
 import androidx.navigation.ui.setupActionBarWithNavController
 import androidx.navigation.ui.setupWithNavController
 import com.google.android.material.navigation.NavigationView
+import com.google.android.material.snackbar.Snackbar
 import com.sagrd.travelmanagement.databinding.ActivityMainBinding
+import com.sagrd.travelmanagement.ui.DatePickerFragment
 
-class MainActivity : AppCompatActivity(){
+class MainActivity : AppCompatActivity() {
 
     private lateinit var appBarConfiguration: AppBarConfiguration
     private lateinit var binding: ActivityMainBinding
 
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
         binding = ActivityMainBinding.inflate(layoutInflater)
         setContentView(binding.root)
 
-
         setSupportActionBar(binding.appBarMain.toolbar)
 
         val drawerLayout: DrawerLayout = binding.drawerLayout
@@ -38,6 +41,7 @@
 
         setupActionBarWithNavController(navController, appBarConfiguration)
         navView.setupWithNavController(navController)
+
     }
 
     override fun onCreateOptionsMenu(menu: Menu): Boolean {
@@ -46,9 +50,21 @@
         return true
     }
 
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        return when (item.itemId) {
+            R.id.balancesDeViajeFragment-> true
+            else -> super.onOptionsItemSelected(item)
+        }
+    }
+
     override fun onSupportNavigateUp(): Boolean {
         val navController = findNavController(R.id.nav_host_fragment_content_main)
         return navController.navigateUp(appBarConfiguration)
                 || super.onSupportNavigateUp()
     }
+
+
 }
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/ui/ClientesViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.ui\r\n\r\nimport android.app.Application\r\nimport android.util.Log\r\nimport androidx.lifecycle.*\r\nimport com.sagrd.travelmanagement.data.AppDataBase\r\nimport com.sagrd.travelmanagement.model.Cliente\r\nimport com.sagrd.travelmanagement.repository.ClientesRepository\r\nimport kotlinx.coroutines.launch\r\nimport java.lang.Exception\r\n\r\nclass ClientesViewModel(application: Application):ViewModel() {\r\n\r\n    private val _listaClientesApi = MutableLiveData<List<Cliente>>()\r\n    val listaClientesApi:LiveData<List<Cliente>>\r\n        get() = _listaClientesApi\r\n\r\n    var clienteId = 0L\r\n\r\n    private val clientesRepository = ClientesRepository(AppDataBase.getInstance(application))\r\n    init {\r\n        viewModelScope.launch {\r\n            try {\r\n                _listaClientesApi.value = clientesRepository.GetClientes()\r\n\r\n            }catch (e:Exception){\r\n                Log.e(\"ClientesViewModel\", \"Fallo al buscar los datos api\")\r\n            }\r\n        }\r\n    }\r\n\r\n    class Factory (val app: Application): ViewModelProvider.Factory{\r\n        override fun <T : ViewModel> create(modelClass: Class<T>): T {\r\n            if (modelClass.isAssignableFrom(ClientesViewModel::class.java)){\r\n                @Suppress(\"UNCHECKER_CAST\")\r\n                return ClientesViewModel(app) as T\r\n            }\r\n            throw IllegalArgumentException(\"Unable to construct viewmodel\")\r\n        }\r\n    }\r\n\r\n    \r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/ui/ClientesViewModel.kt b/app/src/main/java/com/sagrd/travelmanagement/ui/ClientesViewModel.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/ui/ClientesViewModel.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/ui/ClientesViewModel.kt	(date 1638583741984)
@@ -4,15 +4,14 @@
 import android.util.Log
 import androidx.lifecycle.*
 import com.sagrd.travelmanagement.data.AppDataBase
-import com.sagrd.travelmanagement.model.Cliente
+import com.sagrd.travelmanagement.model.Clientes
 import com.sagrd.travelmanagement.repository.ClientesRepository
 import kotlinx.coroutines.launch
 import java.lang.Exception
 
 class ClientesViewModel(application: Application):ViewModel() {
-
-    private val _listaClientesApi = MutableLiveData<List<Cliente>>()
-    val listaClientesApi:LiveData<List<Cliente>>
+    private val _listaClientesApi = MutableLiveData<List<Clientes>>()
+    val listaClientesApi:LiveData<List<Clientes>>
         get() = _listaClientesApi
 
     var clienteId = 0L
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nplugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'kotlin-kapt'\r\n    id 'androidx.navigation.safeargs'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.sagrd.travelmanagement\"\r\n        minSdk 28\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.6.0'\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n\r\n    //ROOM\r\n    implementation(\"androidx.room:room-runtime:2.3.0\")\r\n    implementation(\"androidx.room:room-ktx:2.3.0\")\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    kapt \"androidx.room:room-compiler:2.3.0\"\r\n\r\n    // Retrofit\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    implementation \"com.squareup.okhttp3:okhttp:4.9.0\"\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    //Coroutines\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    //Coroutine Lifecycle Scopes\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1\"\r\n    implementation \"androidx.lifecycle:lifecycle-runtime-ktx:2.3.1\"\r\n    implementation 'com.google.firebase:firebase-auth-common:9.8.0'\r\n\r\n\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/build.gradle	(date 1638583742010)
@@ -73,4 +73,38 @@
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+
+//    implementation 'androidx.core:core-ktx:1.6.0'
+//    implementation 'androidx.appcompat:appcompat:1.3.1'
+//    implementation 'com.google.android.material:material:1.4.0'
+//    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
+//    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
+//    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
+//
+//    //ROOM
+//    implementation("androidx.room:room-runtime:2.3.0")
+//    implementation("androidx.room:room-ktx:2.3.0")
+//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
+//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
+//    kapt "androidx.room:room-compiler:2.3.0"
+//
+//    // Retrofit
+//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
+//    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
+//    implementation "com.squareup.okhttp3:okhttp:4.9.0"
+//    implementation 'com.google.code.gson:gson:2.8.6'
+//
+//    //Coroutines
+//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
+//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
+//
+//    //Coroutine Lifecycle Scopes
+//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
+//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
+//    implementation 'com.google.firebase:firebase-auth-common:9.8.0'
+//
+//    testImplementation 'junit:junit:4.+'
+//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
 }
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/repository/ClientesRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.repository\r\n\r\nimport com.sagrd.travelmanagement.data.AppDataBase\r\nimport com.sagrd.travelmanagement.model.Cliente\r\nimport com.sagrd.travelmanagement.network.RetrofitInstance\r\n\r\nclass ClientesRepository(private val database: AppDataBase) {\r\n    suspend fun GetClientes(): List<Cliente>{\r\n        return RetrofitInstance.api.getClientes()\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/repository/ClientesRepository.kt b/app/src/main/java/com/sagrd/travelmanagement/repository/ClientesRepository.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/repository/ClientesRepository.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/repository/ClientesRepository.kt	(date 1638583741944)
@@ -1,12 +1,11 @@
 package com.sagrd.travelmanagement.repository
 
 import com.sagrd.travelmanagement.data.AppDataBase
-import com.sagrd.travelmanagement.model.Cliente
+import com.sagrd.travelmanagement.model.Clientes
 import com.sagrd.travelmanagement.network.RetrofitInstance
 
 class ClientesRepository(private val database: AppDataBase) {
-    suspend fun GetClientes(): List<Cliente>{
+    suspend fun GetClientes(): List<Clientes>{
         return RetrofitInstance.api.getClientes()
     }
-
 }
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/network/TravelApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.network\r\n\r\n\r\nimport com.sagrd.travelmanagement.model.*\r\nimport retrofit2.Call\r\nimport retrofit2.http.Body\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.POST\r\n\r\ninterface TravelApi {\r\n\r\n    @GET(\"Viajes\")\r\n    suspend fun getTravels():List<Viaje>\r\n\r\n    @GET(\"Ventas\")\r\n    suspend fun getVentas():List<Venta>\r\n\r\n    @POST(\"Viajes\")\r\n    fun postViaje(@Body viaje: Viaje) : Call<Viaje>\r\n\r\n    @POST(\"Cobros\")\r\n    fun postCobro(@Body cobro: Cobro) : Call<Cobro>\r\n\r\n    @GET(\"Gastos\")\r\n    suspend fun getGastos():List<Gasto>\r\n\r\n    @POST(\"Gastos\")\r\n    fun postGasto(@Body gasto: Gasto?) : Call<Gasto>\r\n\r\n    @GET(\"EstadoTarjetas/1\")\r\n    suspend fun getEstado():List<Documentos>\r\n\r\n    @GET (\"Clientes\")\r\n    suspend fun getClientes(): List<Cliente>\r\n\r\n    @POST(\"Seguimientos\")\r\n    fun postSeguimiento(@Body seguimiento: Seguimiento?) : Call<Seguimiento>\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/network/TravelApi.kt b/app/src/main/java/com/sagrd/travelmanagement/network/TravelApi.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/network/TravelApi.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/network/TravelApi.kt	(date 1638583741943)
@@ -7,32 +7,33 @@
 import retrofit2.http.GET
 import retrofit2.http.POST
 
+
 interface TravelApi {
 
     @GET("Viajes")
     suspend fun getTravels():List<Viaje>
 
-    @GET("Ventas")
-    suspend fun getVentas():List<Venta>
-
     @POST("Viajes")
     fun postViaje(@Body viaje: Viaje) : Call<Viaje>
 
+    @GET("Ventas")
+    suspend fun getVentas():List<Venta>
+
     @POST("Cobros")
     fun postCobro(@Body cobro: Cobro) : Call<Cobro>
 
     @GET("Gastos")
     suspend fun getGastos():List<Gasto>
 
+    @GET("Clientes")
+    suspend fun getClientes():List<Clientes>
+
     @POST("Gastos")
     fun postGasto(@Body gasto: Gasto?) : Call<Gasto>
 
     @GET("EstadoTarjetas/1")
     suspend fun getEstado():List<Documentos>
 
-    @GET ("Clientes")
-    suspend fun getClientes(): List<Cliente>
-
     @POST("Seguimientos")
     fun postSeguimiento(@Body seguimiento: Seguimiento?) : Call<Seguimiento>
 }
Index: app/src/main/res/menu/menu_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    tools:context=\"com.sagrd.travelmanagement.MainActivity\">\r\n\r\n    <item\r\n        android:id=\"@+id/action_settings\"\r\n        android:orderInCategory=\"100\"\r\n        android:title=\"SETTINGS\"\r\n        android:showAsAction=\"never\" />\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/menu_main.xml b/app/src/main/res/menu/menu_main.xml
--- a/app/src/main/res/menu/menu_main.xml	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/res/menu/menu_main.xml	(date 1638583741950)
@@ -6,6 +6,7 @@
     <item
         android:id="@+id/action_settings"
         android:orderInCategory="100"
-        android:title="SETTINGS"
-        android:showAsAction="never" />
+        android:title="@string/action_settings"
+        />
+
 </menu>
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/adapters/VentaAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.adapters\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.view.LayoutInflater\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.CheckBox\r\nimport android.widget.LinearLayout\r\nimport android.widget.Toast\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.sagrd.travelmanagement.databinding.FacturasPendienteFragmentBinding\r\nimport com.sagrd.travelmanagement.databinding.FacturasPendienteRowBinding\r\nimport com.sagrd.travelmanagement.model.Cliente\r\nimport com.sagrd.travelmanagement.model.Venta\r\nimport com.sagrd.travelmanagement.model.Viaje\r\nimport com.sagrd.travelmanagement.utils.showMessage\r\nimport java.text.DateFormat\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\nclass VentaAdapter(private var itemClickListener: VentaAdapter.onVentaClickListener) : RecyclerView.Adapter<VentaAdapter.VentaViewHolder>() {\r\n\r\n    private var ventaList = emptyList<Venta>()\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): VentaViewHolder {\r\n        val binding =\r\n            FacturasPendienteRowBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n\r\n        return VentaViewHolder(binding)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: VentaViewHolder, position: Int) {\r\n        holder.bind(ventaList[position])\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return ventaList.size\r\n    }\r\n\r\n    fun submitList(list: List<Venta>)\r\n    {\r\n        ventaList = list\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    inner class VentaViewHolder(private val binding: FacturasPendienteRowBinding) :\r\n        RecyclerView.ViewHolder(binding.root) {\r\n\r\n        fun bind(item: Venta) {\r\n            try {\r\n                val fechaFormateada = item.fecha.replaceRange(9,item.fecha.length,\"\")\r\n                binding.facturaIdTextView.text = item.ventaId.toString()\r\n                binding.fechaTextView.text = fechaFormateada\r\n                binding.balanceTextView.text = item.balance.toString()\r\n\r\n                itemView.setOnClickListener { itemClickListener.onItemClick(item, binding.linearLayout ) }\r\n            }catch (e: Exception)\r\n            {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    interface onVentaClickListener{\r\n        fun onItemClick(data: Venta, linearLayout: LinearLayout)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/adapters/VentaAdapter.kt b/app/src/main/java/com/sagrd/travelmanagement/adapters/VentaAdapter.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/adapters/VentaAdapter.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/adapters/VentaAdapter.kt	(date 1638583741999)
@@ -11,7 +11,7 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.sagrd.travelmanagement.databinding.FacturasPendienteFragmentBinding
 import com.sagrd.travelmanagement.databinding.FacturasPendienteRowBinding
-import com.sagrd.travelmanagement.model.Cliente
+
 import com.sagrd.travelmanagement.model.Venta
 import com.sagrd.travelmanagement.model.Viaje
 import com.sagrd.travelmanagement.utils.showMessage
Index: app/src/main/java/com/sagrd/travelmanagement/data/ClientesDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.data\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.room.Dao\r\nimport androidx.room.Insert\r\nimport androidx.room.Query\r\nimport androidx.room.Update\r\nimport com.sagrd.travelmanagement.model.Cliente\r\n\r\n\r\n@Dao\r\ninterface ClientesDao {\r\n    @Insert\r\n    suspend fun Insert(clientes: Cliente)\r\n\r\n    @Update\r\n    suspend fun Update(clientes: Cliente)\r\n\r\n    @Query(\"SELECT * FROM Cliente WHERE clienteId= :key\")\r\n    fun Find(key:Long): LiveData<Cliente>\r\n\r\n    @Query(\"SELECT * FROM Cliente ORDER BY clienteId ASC\")\r\n    fun Lista() : LiveData<List<Cliente>>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/data/ClientesDao.kt b/app/src/main/java/com/sagrd/travelmanagement/data/ClientesDao.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/data/ClientesDao.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/data/ClientesDao.kt	(date 1638583741942)
@@ -5,20 +5,20 @@
 import androidx.room.Insert
 import androidx.room.Query
 import androidx.room.Update
-import com.sagrd.travelmanagement.model.Cliente
+import com.sagrd.travelmanagement.model.Clientes
 
 
 @Dao
 interface ClientesDao {
     @Insert
-    suspend fun Insert(clientes: Cliente)
+    suspend fun Insert(clientes: Clientes)
 
     @Update
-    suspend fun Update(clientes: Cliente)
+    suspend fun Update(clientes: Clientes )
 
-    @Query("SELECT * FROM Cliente WHERE clienteId= :key")
-    fun Find(key:Long): LiveData<Cliente>
+    @Query("SELECT * FROM Clientes WHERE clienteId= :key")
+    fun Find(key:Long): LiveData<Clientes>
 
-    @Query("SELECT * FROM Cliente ORDER BY clienteId ASC")
-    fun Lista() : LiveData<List<Cliente>>
+    @Query("SELECT * FROM Clientes ORDER BY clienteId ASC")
+    fun Lista() : LiveData<List<Clientes>>
 }
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/ui/balanceviaje/BalancesDeViajeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.ui.balanceviaje\r\n\r\nimport android.app.Application\r\nimport android.util.Log\r\nimport androidx.lifecycle.*\r\nimport com.sagrd.travelmanagement.model.Cliente\r\nimport com.sagrd.travelmanagement.network.RetrofitInstance\r\nimport kotlinx.coroutines.launch\r\nimport java.lang.IllegalArgumentException\r\n\r\nclass BalancesDeViajeViewModel(app: Application) : ViewModel() {\r\n    // TODO: Implement the ViewModel\r\n    private var _lista = MutableLiveData<List<Cliente>>()\r\n\r\n    val lista : LiveData<List<Cliente>>\r\n        get() = _lista\r\n\r\n    init {\r\n        try {\r\n            viewModelScope.launch {\r\n                _lista.value = RetrofitInstance.api.getClientes()\r\n            }\r\n        }catch (E : Exception){\r\n            Log.e(\"ERROR\",\"Fallo al obtener clientes del api\")\r\n        }\r\n    }\r\n\r\n    class Factory (val app: Application): ViewModelProvider.Factory{\r\n        override fun <T : ViewModel> create(modelClass: Class<T>): T {\r\n            if (modelClass.isAssignableFrom(BalancesDeViajeViewModel::class.java)){\r\n                @Suppress(\"UNCHECKER_CAST\")\r\n                return BalancesDeViajeViewModel(app) as T\r\n            }\r\n            throw IllegalArgumentException(\"Unable to construct viewmodel\")\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/ui/balanceviaje/BalancesDeViajeViewModel.kt b/app/src/main/java/com/sagrd/travelmanagement/ui/balanceviaje/BalancesDeViajeViewModel.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/ui/balanceviaje/BalancesDeViajeViewModel.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/ui/balanceviaje/BalancesDeViajeViewModel.kt	(date 1638583741945)
@@ -3,16 +3,16 @@
 import android.app.Application
 import android.util.Log
 import androidx.lifecycle.*
-import com.sagrd.travelmanagement.model.Cliente
+import com.sagrd.travelmanagement.model.Clientes
 import com.sagrd.travelmanagement.network.RetrofitInstance
 import kotlinx.coroutines.launch
 import java.lang.IllegalArgumentException
 
 class BalancesDeViajeViewModel(app: Application) : ViewModel() {
     // TODO: Implement the ViewModel
-    private var _lista = MutableLiveData<List<Cliente>>()
+    private var _lista = MutableLiveData<List<Clientes>>()
 
-    val lista : LiveData<List<Cliente>>
+    val lista : LiveData<List<Clientes>>
         get() = _lista
 
     init {
@@ -34,5 +34,4 @@
             throw IllegalArgumentException("Unable to construct viewmodel")
         }
     }
-
 }
\ No newline at end of file
Index: app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sagrd.travelmanagement.ui.estadoviaje\r\n\r\nimport android.app.Application\r\nimport android.util.Log\r\nimport androidx.lifecycle.*\r\nimport androidx.room.Query\r\nimport com.sagrd.travelmanagement.data.AppDataBase\r\nimport com.sagrd.travelmanagement.model.Documentos\r\nimport com.sagrd.travelmanagement.model.Gasto\r\nimport com.sagrd.travelmanagement.model.Viaje\r\nimport com.sagrd.travelmanagement.network.RetrofitInstance\r\nimport com.sagrd.travelmanagement.repository.*\r\nimport kotlinx.coroutines.launch\r\n\r\nclass EstadoViajeViewModel(application: Application): ViewModel() {\r\n\r\n    private val _listaDocumentoApi = MutableLiveData<List<Documentos>>()\r\n    val listaDocumentoApi : LiveData<List<Documentos>>\r\n        get() = _listaDocumentoApi\r\n\r\n\r\n    private val documentoRepository = documentosRepository(AppDataBase.getInstance(application))\r\n\r\n\r\n    init {\r\n        viewModelScope.launch {\r\n            try{\r\n                _listaDocumentoApi.value = documentoRepository.GetApi()\r\n            }\r\n            catch (e: Exception)\r\n            {\r\n                Log.e(\"EstadoViajeViewModel\", \"Fallo al buscar los datos api\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    class Factory(val app : Application) : ViewModelProvider.Factory{\r\n        override fun <T : ViewModel?> create(modelClass: Class<T>): T {\r\n            if(modelClass.isAssignableFrom(EstadoViajeViewModel::class.java)){\r\n                @Suppress(\"UNCHECKED_CAST\")\r\n                return EstadoViajeViewModel(app) as T\r\n            }\r\n            throw IllegalAccessException(\"Unable to construct viewmodel\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeViewModel.kt b/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeViewModel.kt
--- a/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeViewModel.kt	(revision 5b49b569e8b6ce6087902020ac03764573c670c8)
+++ b/app/src/main/java/com/sagrd/travelmanagement/ui/estadoviaje/EstadoViajeViewModel.kt	(date 1638583741948)
@@ -31,7 +31,6 @@
             {
                 Log.e("EstadoViajeViewModel", "Fallo al buscar los datos api")
             }
-
         }
     }
 
